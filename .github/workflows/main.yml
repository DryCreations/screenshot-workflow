name: Screenshot
on: 
  issue_comment:
    types: 
      - created

jobs:
  
  screenshot:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '/screenshot')
    steps:
    - name: checkout main
      uses: actions/checkout@v2
    - name: setup node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: install playwright
      run: |
        npm install playwright
        sudo npx playwright install-deps
    - name: run server
      run: npm run start & 
        npx wait-on http://127.0.0.1:3000/
    - name: screenshot images
      id: sc_step
      uses: actions/github-script@v5
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const { webkit } = require('playwright');

          (async () => {
            const browser = await webkit.launch();
            const page = await browser.newPage();
            await page.goto('http://whatsmyuseragent.org/');
            await page.screenshot({ path: `image-uploads/example.png` });
            await browser.close();
          })()
    - name: Upload images to imgur
      id: imgur_step
      uses: devicons/public-upload-to-imgur@v2.2.1
      with:
        path: image-uploads/ # or path/to/images
        client_id: ${{secrets.IMGUR_CLIENT_ID}}
    - name: comment on issue
      uses: actions/github-script@v5
      env:
        IMG_URLS: ${{ steps.imgur_step.outputs.imgur_urls }}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const { IMG_URLS } = process.env
          let img_urls = JSON.parse(IMG_URLS)
          console.log(img_urls)
          console.log(img_urls[0])

          let body = img_urls.map((url) => `![Image](${url})`).join('\n')

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          })